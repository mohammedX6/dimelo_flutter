group = "com.example.dimelo_flutter"
version = "1.0-SNAPSHOT"

buildscript {
    ext.kotlin_version = "2.1.0"
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath("com.android.tools.build:gradle:8.9.1")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version")
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        // RingCentral / Dimelo repositories (matching host app)
        maven { url = uri("https://raw.github.com/ringcentral/engage-digital-messaging-android/master") }
        maven { url = uri("https://raw.github.com/ringcentral/engage-digital-messaging-android-location/master") }
        maven { url = uri("https://raw.github.com/dimelo/Dimelo-Android/master") }
    }
}

apply plugin: "com.android.library"
apply plugin: "kotlin-android"

android {
    namespace = "com.example.dimelo_flutter"

    compileSdk = 36

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11
    }

    sourceSets {
        main.java.srcDirs += "src/main/kotlin"
        test.java.srcDirs += "src/test/kotlin"
    }

    defaultConfig {
        minSdk = 24
    }

    dependencies {
        testImplementation("org.jetbrains.kotlin:kotlin-test")
        testImplementation("org.mockito:mockito-core:5.0.0")
        // Dimelo / Engage Digital Messaging SDKs (matching host app versions)
        implementation 'com.dimelo.dimelosdk:dimelosdk:3.3.9'
        implementation 'com.ringcentral.edmessagingmapssdk:edmessagingmapssdk:1.0.1'
        // Required by Dimelo Chat UI
        implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()

            testLogging {
               events "passed", "skipped", "failed", "standardOut", "standardError"
               outputs.upToDateWhen {false}
               showStandardStreams = true
            }
        }
    }
}
